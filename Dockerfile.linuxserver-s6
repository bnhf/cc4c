# docker buildx build --platform linux/amd64 -f Dockerfile.linuxserver-s6 -t bnhf/cc4c:linuxserver-s6 . --push --no-cache
FROM linuxserver/chrome:140.0.7339 AS base

ARG DEBIAN_FRONTEND=noninteractive

# Install Node.js 22.x
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - \
  && apt-get update \
  && apt-get install -y --no-install-recommends nodejs \
  && rm -rf /var/lib/apt/lists/*

# Base env (others like HOME, PATH, TZ, etc. come from LSIO + docker env)
ENV DISPLAY=:99 \
    CHROME_BIN=/usr/bin/google-chrome \
    LIBVA_DRIVER_NAME=iHD \
    DOCKER=true \
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# App files
WORKDIR /home/chrome
COPY main.js package.json bun.lock ./

# Install bun + deps
RUN npm install -g bun \
 && bun install

# ---- s6-rc long-running service: cc4c ----
RUN <<'EOF'
set -eux

mkdir -p /etc/s6-overlay/s6-rc.d/cc4c
cat > /etc/s6-overlay/s6-rc.d/cc4c/run <<'EOR'
#!/command/with-contenv bash
set -euo pipefail
cd /home/chrome

sleep "${CC4C_LOG_DELAY:-4}"

echo "────────────── cc4c ──────────────"
echo "[cc4c] VIDEO_BITRATE=${VIDEO_BITRATE:-8500000} AUDIO_BITRATE=${AUDIO_BITRATE:-256000} FRAMERATE=${FRAMERATE:-60} CC4C_PORT=${CC4C_PORT:-5589} VIDEO_WIDTH=${VIDEO_WIDTH:-1920} VIDEO_HEIGHT=${VIDEO_HEIGHT:-1080}"

exec bun main.js \
  -v "${VIDEO_BITRATE:-8500000}" \
  -a "${AUDIO_BITRATE:-256000}" \
  -f "${FRAMERATE:-60}" \
  -p "${CC4C_PORT:-5589}" \
  -w "${VIDEO_WIDTH:-1920}" \
  -h "${VIDEO_HEIGHT:-1080}"
EOR

chmod +x /etc/s6-overlay/s6-rc.d/cc4c/run
printf 'longrun\n' > /etc/s6-overlay/s6-rc.d/cc4c/type

mkdir -p /etc/s6-overlay/s6-rc.d/user/contents.d
ln -sf /etc/s6-overlay/s6-rc.d/cc4c /etc/s6-overlay/s6-rc.d/user/contents.d/cc4c
EOF

# Ports: cc4c + VNC
EXPOSE 5589 5900
